
import java.sql.*;
import java.sql.DriverManager;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
public class addnewquestion extends javax.swing.JFrame {

    String selectedCategory1 = "Select a Subject";

    Statement stmt;
    ResultSet rs;

    public addnewquestion() {
        initComponents();
        jTextField2.setBackground(new java.awt.Color(0, 0, 0, 1));
        question.setBackground(new java.awt.Color(0, 0, 0, 1));
        jTextField4.setBackground(new java.awt.Color(0, 0, 0, 1));
        jTextField5.setBackground(new java.awt.Color(0, 0, 0, 1));
        jTextField6.setBackground(new java.awt.Color(0, 0, 0, 1));
        jTextField3.setBackground(new java.awt.Color(0, 0, 0, 1));
        jTextField7.setBackground(new java.awt.Color(0, 0, 0, 1));
        table.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                int selectedRow = table.getSelectedRow();
                if (selectedRow != -1) {

                    jTextField2.setText(table.getValueAt(selectedRow, 0).toString());
                    jTextField2.setText(table.getValueAt(selectedRow, 1).toString());
                    question.setText(table.getValueAt(selectedRow, 2).toString());
                    jTextField4.setText(table.getValueAt(selectedRow, 3).toString());
                    jTextField5.setText(table.getValueAt(selectedRow, 4).toString());
                    jTextField6.setText(table.getValueAt(selectedRow, 5).toString());
                    jTextField3.setText(table.getValueAt(selectedRow, 6).toString());
                    jTextField7.setText(table.getValueAt(selectedRow, 7).toString());
                }
            }
        });

        try {

            java.sql.Connection con;
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/quiz", "root", "root");
            stmt = con.createStatement();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error connecting to the database.");
            e.printStackTrace();
        }
        displayQuestions();
    }

    private void displayQuestions() {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        try {
            rs = stmt.executeQuery("SELECT * FROM Questions");
            while (rs.next()) {
                model.addRow(new Object[]{rs.getInt("id"), rs.getString("sub"), rs.getString("question"),
                    rs.getString("option1"), rs.getString("option2"),
                    rs.getString("option3"), rs.getString("option4"),
                    rs.getString("answer")});
                clearFields();
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error retrieving questions from the database.");
            e.printStackTrace();
        }
    }

    private void clearFields() {
        jTextField2.setText(""); 
        question.setText("");   
        jTextField4.setText(""); 
        jTextField5.setText("");
        jTextField6.setText(""); 
        jTextField3.setText(""); 
        jTextField7.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        question = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 51, 204));
        setMinimumSize(new java.awt.Dimension(1570, 918));
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Customize Question!");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 384, -1));

        jLabel2.setText("Question No:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, 80, -1));
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(864, 353, 37, -1));

        jLabel10.setText("Question");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, 60, 20));

        jLabel11.setText("Option 1");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, 60, -1));

        jLabel12.setText("Option 3");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 350, 60, -1));

        jLabel13.setText("Option 2");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 310, 50, -1));

        jLabel14.setText("Option 4");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 400, 50, -1));

        jLabel15.setText("Answer:");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 450, 60, -1));

        jLabel17.setText("_______________________________________________________________________________");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 220, 380, -1));

        jLabel18.setText("_____________________________________________________________________________");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 180, 390, -1));

        jLabel19.setText("_______________________________________________________________________________");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 270, 380, -1));

        jLabel20.setText("______________________________________________________________________________");
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 310, 390, -1));

        jLabel21.setText("_____________________________________________________________________________");
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 350, 380, -1));

        jLabel22.setText("_____________________________________________________________________________");
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 400, 370, -1));

        jLabel23.setText("____________________________________________________________________________");
        getContentPane().add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 450, 380, -1));

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/cleaning.png"))); // NOI18N
        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 420, -1, -1));

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/add-file.png"))); // NOI18N
        jButton3.setText("Add Question");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 210, -1, -1));

        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/sync.png"))); // NOI18N
        jButton4.setText("Update");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 270, -1, -1));

        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/delete.png"))); // NOI18N
        jButton5.setText("Delete");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 340, 110, -1));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Question No", "Subject", "Question", "Option 1", "Option 2", "Option 3", "Option 4", "Answer"
            }
        ));
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setPreferredWidth(30);
            table.getColumnModel().getColumn(2).setPreferredWidth(400);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 570, 1380, 200));

        question.setBorder(null);
        getContentPane().add(question, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 210, 390, 20));

        jTextField2.setBorder(null);
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 170, 380, 20));

        jTextField3.setBorder(null);
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 380, 380, 30));

        jTextField4.setBorder(null);
        getContentPane().add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 260, 380, 30));

        jTextField5.setBorder(null);
        getContentPane().add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 300, 380, 30));

        jTextField6.setBorder(null);
        getContentPane().add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 340, 380, 30));

        jTextField7.setBorder(null);
        getContentPane().add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 430, 370, 30));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 0, 51));
        jLabel3.setText("X");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1460, 20, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/web.png"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/back (1).png"))); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1410, 780, -1, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select a Subject","GK", "English", "OODP" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 130, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/addnewquestion.jpg"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -230, 1540, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (!selectedCategory1.equals("Select a Subject")) {

            int questionNo = Integer.parseInt(jTextField2.getText());

         
            if (isQuestionNumberExists(questionNo)) {
                JOptionPane.showMessageDialog(this, "Question number already exists. Choose a different question number");
            } else {
               
                String subject = selectedCategory1;
                String questionText = question.getText();
                String option1 = jTextField4.getText();
                String option2 = jTextField5.getText();
                String option3 = jTextField6.getText();
                String option4 = jTextField3.getText();
                String Answer = jTextField7.getText();

                try {
                    stmt.executeUpdate("INSERT INTO questions (id, sub, question, option1, option2, option3, option4, answer) VALUES ('" + questionNo + "','" + subject + "', '" + questionText + "', '" + option1 + "', '" + option2 + "', '" + option3 + "', '" + option4 + "', '" + Answer + "')");
                    JOptionPane.showMessageDialog(this, "Question added successfully!");
                    displayQuestions();
                    clearFields();
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(this, "Error adding question to the database.");
                    e.printStackTrace();
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a valid category.");
        }
    }

    private boolean isQuestionNumberExists(int questionNo) {
        try {
            ResultSet resultSet = stmt.executeQuery("SELECT * FROM questions WHERE id=" + questionNo);
            return resultSet.next();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return false;

        /* if (!selectedCategory1.equals("Select a Subject")) {
            
            int questionNo = Integer.parseInt(jTextField2.getText());
            String subject = selectedCategory1;
            String questionText = question.getText();
            String option1 = jTextField4.getText();
            String option2 = jTextField5.getText();
            String option3 = jTextField6.getText();
            String option4 = jTextField3.getText();
            String Answer = jTextField7.getText();
            try {
                stmt.executeUpdate("INSERT INTO questions (id, sub, question, option1, option2, option3, option4, answer) VALUES ('" + questionNo + "','" + subject + "', '" + questionText + "', '" + option1 + "', '" + option2 + "', '" + option3 + "', '" + option4 + "', '" + Answer + "')");
                JOptionPane.showMessageDialog(this, "Question added successfully!");
                displayQuestions();
                clearFields();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error adding question to the database.");
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a valid category.");
        }*/

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (!selectedCategory1.equals("Select a Subject")) {
            int selectedRow = table.getSelectedRow();
            if (selectedRow != -1) {
                int questionNo = Integer.parseInt(jTextField2.getText());
                String questionText = question.getText();
                String option1 = jTextField4.getText();
                String option2 = jTextField5.getText();
                String option3 = jTextField6.getText();
                String option4 = jTextField3.getText();
                String Answer = jTextField7.getText();
                try {
                    stmt.executeUpdate("UPDATE questions SET question='" + questionText + "', option1='" + option1 + "', option2='" + option2 + "', option3='" + option3 + "', option4='" + option4 + "', answer='" + Answer + "' WHERE id=" + questionNo);
                    JOptionPane.showMessageDialog(this, "Question updated successfully!");
                    displayQuestions();
                    clearFields();
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(this, "Error updating question in the database.");
                    e.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Please select a question to update.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a valid category.");
        }


    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (!selectedCategory1.equals("Select a Subject")) {
            int selectedRow = table.getSelectedRow();
            if (selectedRow != -1) {
                int questionNo = (int) table.getValueAt(selectedRow, 0);
                try {
                    stmt.executeUpdate("DELETE FROM questions WHERE id=" + questionNo);
                    JOptionPane.showMessageDialog(this, "Question deleted successfully!");
                    displayQuestions();
                    clearFields();
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(this, "Error deleting question from the database.");
                    e.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Please select a question to delete.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a valid category.");
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        System.exit(0);
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        AdminDashboard a = new AdminDashboard();
        a.setVisible(true);
        dispose();
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jTextField2.setText("");
        question.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setText("");
        jTextField3.setText("");
        jTextField7.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        selectedCategory1 = (String) jComboBox1.getSelectedItem();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);

        if (!selectedCategory1.equals("Select a Subject")) {
            try {
                Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/quiz", "root", "root");
                String query = "SELECT * FROM questions WHERE sub = ?";
                PreparedStatement preparedStatement = connection.prepareStatement(query);
                preparedStatement.setString(1, selectedCategory1);
                ResultSet resultSet = preparedStatement.executeQuery();

                while (resultSet.next()) {
                    int id = resultSet.getInt("id");
                    String subject = resultSet.getString("sub");
                    String question = resultSet.getString("question");
                    String option1 = resultSet.getString("option1");
                    String option2 = resultSet.getString("option2");
                    String option3 = resultSet.getString("option3");
                    String option4 = resultSet.getString("option4");
                    String answer = resultSet.getString("answer");

                    Object[] rowData = {id, subject, question, option1, option2, option3, option4, answer};
                    model.addRow(rowData);
                    clearFields();
                }

                resultSet.close();
                preparedStatement.close();
                connection.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
        /*selectedCategory1 = (String) jComboBox1.getSelectedItem();
       
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);

        try {
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/quiz", "root", "");
            String query = "SELECT * FROM questions WHERE sub = ?";
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            preparedStatement.setString(1, selectedCategory1);
            ResultSet resultSet = preparedStatement.executeQuery();

            while (resultSet.next()) {
                int id = resultSet.getInt("id");
                String subject = resultSet.getString("sub");
                String question = resultSet.getString("question");
                String option1 = resultSet.getString("option1");
                String option2 = resultSet.getString("option2");
                String option3 = resultSet.getString("option3");
                String option4 = resultSet.getString("option4");
                String answer = resultSet.getString("answer");

                Object[] rowData = {id, subject,question,option1,option2,option3,option4,answer};

                model.addRow(rowData);
                clearFields();
            }

            resultSet.close();
            preparedStatement.close();
            connection.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }*/

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        for (double i = 0.0; i <= 1.0; i = i + 0.1) {
            String val = i + "";
            float f = Float.valueOf(val);
            this.setOpacity(f);
            try {
                Thread.sleep(50);
            } catch (Exception e) {

            }
        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addnewquestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addnewquestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addnewquestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addnewquestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addnewquestion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField question;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
